<style>
/* Cart Page Styling */
.main {
    padding: 20px 0;
}

/* Breadcrumb Styling */
.breadcrumb-wrap {
    margin-bottom: 30px;
    background-color: #f8f9fa;
    padding: 15px 0;
}

.breadcrumb {
    display: flex;
    align-items: center;
    gap: 10px;
    margin: 0;
}

.breadcrumb a {
    color: #666;
    text-decoration: none;
}

.breadcrumb span {
    color: #333;
}

/* Cart Table Styling */
.cart-table {
    width: 100%;
    border-collapse: collapse;
    margin-bottom: 30px;
}

.cart-table thead {
    background-color: #000;
    color: #fff;
}

.cart-table th, .cart-table td {
    padding: 15px;
    text-align: left;
    border-bottom: 1px solid #ddd;
}

/* Quantity Control Styling */
.quantity-control {
    display: flex;
    align-items: center;
    gap: 10px;
}

.quantity-control button {
    width: 30px;
    height: 30px;
    background-color: #f8f9fa;
    border: 1px solid #ddd;
    cursor: pointer;
}

.quantity-control input {
    width: 50px;
    text-align: center;
    height: 30px;
    border: 1px solid #ddd;
}

/* Empty Cart Message */
.empty-cart-message {
    text-align: center;
    padding: 50px 0;
    background-color: #f8f9fa;
}

.empty-cart-message h3 {
    margin-bottom: 20px;
}

.empty-cart-message a {
    display: inline-block;
    padding: 10px 20px;
    background-color: #000;
    color: #fff;
    text-decoration: none;
}

/* Cart Totals */
.cart-totals {
    background-color: #f8f9fa;
    padding: 20px;
    margin-top: 30px;
}

.cart-totals table {
    width: 100%;
}

.cart-totals td {
    padding: 10px 0;
    border-bottom: 1px solid #ddd;
}

.checkout-btn {
    display: block;
    width: 100%;
    padding: 15px;
    background-color: #000;
    color: #fff;
    text-align: center;
    text-decoration: none;
    margin-top: 20px;
}
</style>
<main class="main">
    <div class="page-header breadcrumb-wrap" data-aos="fade-up">
        <div class="container">
            <div class="breadcrumb">
                <a href="/" rel="nofollow">Home</a>
                <span>Cart</span>
            </div>
        </div>
    </div>

    <section class="container">
        <% if (items && items.length > 0) { %>
        <div class="row">
            <div class="col-12">
                <table class="cart-table">
                    <thead>
                        <tr>
                            <th>Product</th>
                            <th>Price</th>
                            <th>Quantity</th>
                            <th>Subtotal</th>
                            <th>Remove</th>
                        </tr>
                    </thead>
                    <tbody>
                        <% items.forEach(item => { %>
                        <tr data-item-id="<%= item.id %>">
                            <td>
                                <div class="cart-product-item d-flex align-items-center gap-3">
                                <img src="/uploads/re-images/<%= item.productImage[0] %>" alt="<%= item.productname %>" class="cart-product-image" style="width: 80px; height: 80px; object-fit: cover;">
                                <div class="cart-product-details d-flex flex-column justify-content-center">
                                <h5><a href="/productdetails/<%= item.id %>"><%= item.productname %></a></h5>
                                <p>Size: <%= item.size %></p>
                                </div>
                                </div>
                            </td>
                            <td><span>₹<%= item.salePrice %></span></td>
                            <td>
                                <div class="quantity-control">
                                    <button onclick="decreaseQuantity('<%= item.id %>','<%= item.size %>')">-</button>
                                    <input 
                                    type="text" 
                                    value="<%= item.quantity %>" 
                                    readonly
                                    data-product-id="<%= item.id %>"
                                    data-size="<%= item.size %>">
                                    <button onclick="increaseQuantity('<%= item.id %>','<%= item.size %>')">+</button>
                                </div>
                            </td>
                            <td><span
                                     data-subtotal-id="<%= item.id %>"
                                     data-size="<%= item.size %>"
                                     >₹<%= item.salePrice * item.quantity %></span></td>
                            <td>
                                <button onclick="deleteCartItem('<%= item.id %>')" class="btn btn-danger">Remove</button>
                            </td>
                        </tr>
                        <% }) %>
                    </tbody>
                </table>
            </div>
        </div>
        <div>
            <a href="/shop" class="btn btn-outline-dark">Continue Shopping</a>
        </div>

        <div class="row">
            <div class="col-md-6 offset-md-6">
                <div class="cart-totals" data-aos="fade-left">
                    <h4>Cart Totals</h4>
                    <table>
                        <tbody>
                            <tr>
                                <td>Cart Subtotal</td>
                                <td>₹<span class="cart-total-value"><%= total %></span></td>
                            </tr>
                            <tr>
                                <td>Shipping</td>
                                <td><i class="fa fa-truck"></i> Free Shipping</td>
                            </tr>
                            <tr>
                                <td><strong>Total</strong></td>
                                <td><strong>₹<span class="cart-total-value"><%= total %></span></strong></td>
                            </tr>
                        </tbody>
                    </table>
                    <a href="/checkout" class="checkout-btn">Proceed To Checkout</a>
                </div>
            </div>
        </div>
        <% } else { %>
        <div class="empty-cart-message" data-aos="fade-up">
            <h3>Your cart is empty</h3>
            <a href="/shop">Click here to add products</a>
        </div>
        <% } %>
    </section>
</main>
<%-include("../partials/user/footer") %>

<script>
    function updateQuantity(productId, size, action) {
        console.log('update quantity triggered');
        console.log('parameters are:',productId, size, action);
        axios.post('/updateCartQty',{productId, size, action})
        .then(response => {
            if(response.data.success){
                // Update quantity input
                const quantityInput = document.querySelector(
                    `input[data-product-id="${productId}"][data-size="${size}"]`
                );
               
                if(quantityInput){
                    const purchaseLimit = response.data.purchaseLimit;
                    console.log('purchase limit:',purchaseLimit);
                    console.log('action:',action);
                    console.log('quantity:',response.data.quantity);
                    console.log(action === 'increase' && response.data.quantity >= purchaseLimit);
                    if(action === 'increase' && response.data.quantity >= purchaseLimit){
                        console.log('purchase limit exceeded');
                        swal.fire({
                            toast: true,
                            position: 'top-end',
                            icon: 'warning',
                            title: `You can only purchase 5 items`,
                            showConfirmButton: false,
                            timer: 1500
                        });
                        return;
                    }
                    quantityInput.value = response.data.quantity;

                }

                //update subtotal
                const subtotalElement = document.querySelector(
                    `[data-subtotal-id="${productId}"][data-size="${size}"]`
                );

                if(subtotalElement){
                    subtotalElement.textContent = `₹${response.data.totalPrice}`;
                }

                const cartTotalElement = document.querySelectorAll('.cart-total-value');
                cartTotalElement.forEach(el => {
                    el.textContent = `${response.data.cartTotal}`;
                });

                swal.fire({
                    toast: true,
                    position: 'top-end',
                    icon: 'success',
                    title: 'Cart updated',
                    showConfirmButton: false,
                    timer:1500
                });
            
            }
        })
        .catch(error => {
            console.log('Error updating cart quantity:',error);
            swal.fire({
                icon: 'error',
                title: 'Oops...',
                text: 'Something went wrong!',
            });
        });
    }

    function increaseQuantity(productId, size) {
        console.log('increase quantity triggered');
        console.log('parameters are:',productId, size);
        updateQuantity(productId,size,'increase');
    }

    function decreaseQuantity(productId, size) {
        console.log('decrease quantity triggered');
        console.log('parameters are:',productId, size);
        updateQuantity(productId,size,'decrease');
    }

    function deleteCartItem(productId) {
        console.log('delete cart item triggered');
        console.log('Deleting product:',productId);

        axios.post("/removeCartItem",{productId})
        .then(response => {
            if(response.data.success){
                
                const itemRow = document.querySelector(`[data-item-id="${productId}"]`);
                if(itemRow){
                    itemRow.remove();
                }

                const cartTotalElement = document.querySelectorAll('.cart-total-value');
                cartTotalElement.forEach(el => {
                    el.textContent = `${response.data.cartTotal}`;
                });

                swal.fire({
                    toast: true,
                    position: 'top-end',
                    icon: 'success',
                    title: 'Item removed',
                    showConfirmButton: false,
                    timer: 1500
                });
            }
        })
        .catch(error => {
            console.log('Error removing item:',error);
            swal.fire({
                icon: 'error',
                title: 'Oops...',
                text: 'Something went wrong!',
            });
        });
    }
    </script>