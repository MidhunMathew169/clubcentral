<style>
    body {
      background-color: #f8f9fa;
    }
    .cart-icon {
      color: #dc3545;
      font-size: 2.5rem;
    }
    .cart-table th {
      background-color: #f2f2f2;
      color: #6c757d;
      font-size: 0.9rem;
      text-transform: uppercase;
      font-weight: 600;
    }
    .card {
      border-radius: 0.5rem;
      box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);
    }
    .quantity-input {
      width: 40px;
      text-align: center;
      border: 1px solid #ced4da;
    }
    .btn-quantity {
      background-color: #e9ecef;
      color: #6c757d;
      width: 32px;
      padding: 0;
    }
    .btn-quantity:hover {
      background-color: #dee2e6;
    }
    .remove-btn {
      color: #dc3545;
      background: none;
      border: none;
      font-size: 1.2rem;
    }
    .remove-btn:hover {
      color: #b02a37;
    }
    .checkout-btn {
      background-color: #ffc107;
      border-color: #ffc107;
    }
    .checkout-btn:hover {
      background-color: #ffca2c;
      border-color: #ffca2c;
    }
  </style>
  <%- include('../partials/user/header') %>
<div class="container py-5">
      <!-- Cart Icon -->
      <div class="text-center mb-4">
        <i class="fas fa-shopping-cart cart-icon"></i>
      </div>
      
      <!-- Cart Table -->
       <% if(items && items.length > 0) { %>
      <div class="card mb-4">
        <div class="card-body p-0">
          <div class="table-responsive">
            <table class="table table-hover cart-table mb-0">
              <thead>
                <tr>
                  <th class="ps-4 py-3">IMAGE</th>
                  <th class="py-3">PRODUCT</th>
                  <th class="py-3 text-center">PRICE</th>
                  <th class="py-3 text-center">QUANTITY</th>
                  <th class="py-3 text-center">SUBTOTAL</th>
                  <th class="py-3 text-center">REMOVE</th>
                </tr>
              </thead>
              <tbody>
                <% items.forEach(item => { %>
                <tr data-item-id="<%= item.id %>">
                  <td class="ps-4 py-3">
                    <img src="/uploads/re-images/<%= item.productImage[0] %>" alt="<%= item.productName %>" width="100" height="100" class="rounded">
                  </td>
                  <td class="py-3 align-middle">
                    <h5><a href="/productdetails/<%= item.id %>"><%= item.productname %></a></h5>
                    <p>Size:<%= item.size %></p>
                </td>
                  <td class="py-3 text-center align-middle">₹<%= item.salePrice %></td>
                  <td class="py-3 text-center align-middle">
                    <div class="d-flex justify-content-center">
                      <button class="btn btn-quantity rounded-start" onclick="decreaseQuantity('<%= item.id %>','<%= item.size %>')">-</button>
                      <input 
                      type="text" 
                      class="quantity-input border-start-0 border-end-0" 
                      value="<%= item.quantity %>" 
                      readonly
                      data-product-id="<%= item.id %>"
                      data-size="<%= item.size %>"
                      >
                      <button class="btn btn-quantity rounded-end" onclick="increaseQuantity('<%= item.id %>','<%= item.size %>')">+</button>
                    </div>
                  </td>
                  <td class="py-3 text-center align-middle"><span 
                    data-subtotal-id="<%= item.id %>" 
                    data-size="<%= item.size %>">₹<%= item.salePrice * item.quantity %></span></td>
                  <td class="py-3 text-center align-middle">
                    <button class="remove-btn" onclick="deleteCartItem('<%= item.id %>')">
                      <i class="fas fa-trash-alt"></i>
                    </button>
                  </td>
                </tr>
                <% }) %>
              </tbody>
            </table>
          </div>
        </div>
      </div>
      
      <!-- Cart Total -->
      <div class="row">
        <div class="col-12 col-md-4 ms-auto">
          <div class="card">
            <div class="card-body">
              <h5 class="fw-bold mb-4">Cart Total</h5>
              <div class="d-flex justify-content-between mb-2">
                <span>Subtotal</span>
                <span class="cart-total-value">₹<%= total %></span>
              </div>
              <div class="d-flex justify-content-between mb-2">
                <span>Shipping</span>
                <span>Free</span>
              </div>
              <div class="d-flex justify-content-between mb-4">
                <span class="fw-bold">Total</span>
                <span class="cart-total-value">₹<%= total %></span>
              </div>
              <button class="btn checkout-btn text-dark w-100 py-2"><a href="/checkout">Proceed To Checkout</a></button>
            </div>
          </div>
        </div>
      </div>
      <% } else { %>
        <div class="text-center">
            <h3>Your cart is empty</h3>
            <a href="/shop" class="btn btn-primary mt-3">Continue Shopping</a>
        </div>
        <% } %>
    </div>
  
    <%- include('../partials/user/footer') %>

<script>
    function updateQuantity(productId, size, action) {
        console.log('update quantity triggered');
        console.log('parameters are:',productId, size, action);
        axios.post('/updateCartQty',{productId, size, action})
        .then(response => {
            if(response.data.success){
                // Update quantity input
                const quantityInput = document.querySelector(
                    `input[data-product-id="${productId}"][data-size="${size}"]`
                );
               
                if(quantityInput){
                    const purchaseLimit = response.data.purchaseLimit;
                    console.log('purchase limit:',purchaseLimit);
                    console.log('action:',action);
                    console.log('quantity:',response.data.quantity);
                    console.log(action === 'increase' && response.data.quantity >= purchaseLimit);
                    if(action === 'increase' && response.data.quantity >= purchaseLimit){
                        console.log('purchase limit exceeded');
                        swal.fire({
                            toast: true,
                            position: 'top-end',
                            icon: 'warning',
                            title: `You can only purchase 5 items`,
                            showConfirmButton: false,
                            timer: 1500
                        });
                        return;
                    }
                    quantityInput.value = response.data.quantity;

                }

                //update subtotal
                const subtotalElement = document.querySelector(
                    `[data-subtotal-id="${productId}"][data-size="${size}"]`
                );

                if(subtotalElement){
                    subtotalElement.textContent = `₹${response.data.totalPrice}`;
                }

                const cartTotalElement = document.querySelectorAll('.cart-total-value');
                cartTotalElement.forEach(el => {
                    el.textContent = `${response.data.cartTotal}`;
                });

                swal.fire({
                    toast: true,
                    position: 'top-end',
                    icon: 'success',
                    title: 'Cart updated',
                    showConfirmButton: false,
                    timer:1500
                });
            
            }
        })
        .catch(error => {
            console.log('Error updating cart quantity:',error);
            swal.fire({
                icon: 'error',
                title: 'Oops...',
                text: 'Something went wrong!',
            });
        });
    }

    function increaseQuantity(productId, size) {
        console.log('increase quantity triggered');
        console.log('parameters are:',productId, size);
        updateQuantity(productId,size,'increase');
    }

    function decreaseQuantity(productId, size) {
        console.log('decrease quantity triggered');
        console.log('parameters are:',productId, size);
        updateQuantity(productId,size,'decrease');
    }

    function deleteCartItem(productId) {
        console.log('delete cart item triggered');
        console.log('Deleting product:',productId);

        axios.post("/removeCartItem",{productId})
        .then(response => {
            if(response.data.success){
                
                const itemRow = document.querySelector(`[data-item-id="${productId}"]`);
                if(itemRow){
                    itemRow.remove();
                }

                const cartTotalElement = document.querySelectorAll('.cart-total-value');
                cartTotalElement.forEach(el => {
                    el.textContent = `${response.data.cartTotal}`;
                });

                swal.fire({
                    toast: true,
                    position: 'top-end',
                    icon: 'success',
                    title: 'Item removed',
                    showConfirmButton: false,
                    timer: 1500
                });
            }
        })
        .catch(error => {
            console.log('Error removing item:',error);
            swal.fire({
                icon: 'error',
                title: 'Oops...',
                text: 'Something went wrong!',
            });
        });
    }
    </script>