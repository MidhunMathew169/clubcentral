
<!-- Cropper.js CSS -->
<link href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.css" rel="stylesheet">
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
<!-- Cropper.js JS -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.js"></script>

<style>
    .flex-h-screen {
        display: flex;
        min-height: 100vh;
    }
    .flex-1 {
        flex: 1;
        display: flex;
        flex-direction: column;
        overflow-x: hidden;
    }
    .main-content {
        padding: 40px;
        margin: 0 auto;
        width: 90%;
        max-width: 1400px;
    }
    .header-section {
        margin-bottom: 30px;
    }
    .header-section h2 {
        font-size: 24px;
        font-weight: 600;
    }
    .form-section {
        background: white;
        border-radius: 8px;
        box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        margin-bottom: 20px;
    }
    .section-title {
        padding: 15px 20px;
        border-bottom: 1px solid #eee;
        font-weight: 500;
    }
    .section-content {
        padding: 20px;
    }
    .form-group {
        margin-bottom: 15px;
    }
    .form-label {
        display: block;
        margin-bottom: 8px;
        font-weight: 500;
    }
    .form-control {
        width: 100%;
        padding: 8px 12px;
        border: 1px solid #ddd;
        border-radius: 4px;
        height: 40px;
    }
    .form-control:focus {
        border-color: #000;
        outline: none;
        box-shadow: 0 0 0 2px rgba(0,0,0,0.1);
    }
    textarea.form-control {
        height: 40px;
        resize: none;
    }
    .image-upload-section {
        display: grid;
        grid-template-columns: 1fr 1fr 1fr;
        gap: 20px;
        margin-top: 20px;
    }
    /*.image-upload-box {
        border: 2px dashed #ddd;
        border-radius: 8px;
        padding: 20px;
        text-align: center;
        cursor: pointer;
        height: 150px;
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
    }*/
    .image-preview {
        max-width: 100%;
        height: 200px;
        object-fit: cover;
        margin-bottom: 0px;/*update later*/
        border: 1px solid #ddd;
        border-radius: 4px;
    }
    .image-upload-box:hover {
        border-color: #000;
    }
    .main-image-box {
        grid-column: span 3;
        height: 200px;
    }
    .size-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(80px, 1fr));
        gap: 15px;
        margin-top: 10px;
    }
    .size-input-group {
        display: flex;
        align-items: center;
        gap: 8px;
    }
    .size-input-group label {
        min-width: 30px;
    }
    .size-input {
        width: 50px;
        padding: 4px;
        text-align: center;
        border: 1px solid #ddd;
        border-radius: 4px;
        height: 30px;
    }
    .image-upload-container {
        position: relative;
        margin-bottom: 20px;
    }
    .button-group {
        display: flex;
        justify-content: flex-end;
        gap: 10px;
        margin-top: 20px;
    }
    .btn {
        padding: 8px 20px;
        border-radius: 4px;
        cursor: pointer;
        font-weight: 500;
    }
    .btn-primary {
        background: #000;
        color: white;
        border: none;
        /*font-size: 0.5rem;*/
    }
    .btn-secondary {
        background: #fff;
        color: #000;
        border: 1px solid #000;
    }
    .btn:hover {
        opacity: 0.9;
    }
</style>

<div class="flex-h-screen">
    <!--side bar section-->
    <%- include('../partials/admin/side bar') %>
    <div class="flex-1">
        <!--header section-->
        <%- include('../partials/admin/header') %>
        <div class="main-content">
            <div class="header-section">
                <h2>ADD PRODUCT</h2>
            </div>

            <form id="productForm" enctype="multipart/form-data">
                <div class="form-section">
                    <div class="section-title">General Information</div>
                    <div class="section-content">
                        <div class="form-group">
                            <label class="form-label">Product Name</label>
                            <input type="text" class="form-control" name="productName" id="product_name" placeholder="Enter product name">
                            <div id="productName-error" class="error-message"></div>
                        </div>
                        <div class="form-group">
                            <label class="form-label">Description</label>
                            <textarea class="form-control" name="description" id="descriptionid" placeholder="Product description"></textarea>
                            <div id="description-error" class="error-message"></div>
                        </div>
                        <div class="form-group" style="display: flex; gap: 20px;">
                            <div style="flex: 1;">
                                <label class="form-label">Regular Price</label>
                                <div>
                                <input type="text" class="form-control" name="regularPrice">
                                <div id="regularPrice-error" class="error-message"></div>
                                </div>
                            </div>
                            <div style="flex: 1;">
                                <label class="form-label">Sale Price</label>
                                <div>
                                <input type="text" class="form-control" name="salePrice">
                                <div id="salePrice-error" class="error-message"></div>
                                </div>
                            </div>
                            <div style="flex: 1;">
                                <label class="form-label">Quantity</label>
                                <div>
                                <input type="text" class="form-control" name="quantity">
                                <div id="quantity-error" class="error-message"></div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="form-section">
                    <div class="section-title">Product Images</div>
                    <div class="section-content">
                        
                        <div class="row">
                            <% for(let i = 1; i <= 4; i++) { %>
                                <div class="col-md-6 mb-4">
                                    <div class="image-upload-container">
                                        <img src="" alt="Preview" id="imgView<%= i %>" class="image-preview">
                                        <input class="form-control" type="file" name="images" id="input<%= i %>"
                                        accept="image/*"
                                        onchange="viewImage(event, '<%= i %>')">
                                        <div class="cropper-container" id="cropperContainer<%= i %>" style="display: none;">
                                            <button type="button" class="btn btn-primary mt-2" id="saveButton<%= i %>" onclick="saveCroppedImage('<%= i %>')">
                                                Save
                                            </button>
                                        </div>
                                    </div> 
                                    <!--<div class="image-upload-container">
                                        <img src="" alt="Preview" id="imgView1" class="image-preview">
                                        <input class="form-control" type="file" id="input1" accept="image/*" onchange="viewImage(event, '<%= i %>')">
                                        <div class="cropper-container" id="cropperContainer1" style="display: none;">
                                            <button type="button" class="btn btn-primary mt-2" onclick="saveCroppedImage(1)">Save Image</button>
                                        </div>
                                    </div>-->
                                </div>
                                <% } %>
                        </div>
                    </div>
                </div>

                <div class="form-section">
                    <div class="section-title">Product Details</div>
                    <div class="section-content">
                        <div class="form-group">
                            <label class="form-label">Select Category</label>
                            <select class="form-control" name="category" required>
                                <option value="">Choose category</option>
                                <% if(cat && cat.length > 0) { %>
                                    <% cat.forEach(category => { %>
                                        <option value="<%= category._id %>"><%= category.name %></option>
                                    <% }) %>
                                <% } %>
                            </select>
                            <div id="category-error" class="error-message"></div>
                        </div>
                        <div class="form-group">
                            <label class="form-label">Select Fit Type</label>
                            <select class="form-control" name="fitType" required>
                                <option value="">Choose fit type</option>
                                <option value="Regular Fit">Regular Fit</option>
                                <option value="Slim Fit">Slim Fit</option>
                                <option value="Loose Fit">Loose Fit</option>
                            </select>
                            <div id="fitType-error" class="error-message"></div>
                        </div>
                        <div class="form-group">
                            <label class="form-label">Select Sleeve</label>
                            <select class="form-control" name="sleeve" required>
                                <option value="">Choose sleeve type</option>
                                <option value="Full Sleeve">Full Sleeve</option>
                                <option value="Half Sleeve">Half Sleeve</option>
                                <option value="Short Sleeve">Short Sleeve</option>
                            </select>
                            <div id="sleeve-error" class="error-message"></div>
                        </div>
                        <div class="form-group">
                            <label class="form-label">Size Available</label>
                            <div class="size-grid">
                                <div class="size-input-group">
                                    <label>S</label>
                                    <input type="number" class="size-input" name="sizeS" min="0">
                                </div>
                                <div class="size-input-group">
                                    <label>M</label>
                                    <input type="number" class="size-input" name="sizeM" min="0">
                                </div>
                                <div class="size-input-group">
                                    <label>L</label>
                                    <input type="number" class="size-input" name="sizeL" min="0">
                                </div>
                                <div class="size-input-group">
                                    <label>XL</label>
                                    <input type="number" class="size-input" name="sizeXL" min="0">
                                </div>
                                <div class="size-input-group">
                                    <label>XXL</label>
                                    <input type="number" class="size-input" name="sizeXXL" min="0">
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="button-group">
                    <button type="button" class="btn btn-secondary" onclick="history.back()">CANCEL</button>
                    <button type="submit" class="btn btn-primary">ADD PRODUCT</button>
                </div>
            </form>
        </div>
    </div>
</div>
<!--<script src="https://cdn.jsdelivr.net/npm/cropperjs@1.5.13/dist/cropper.min.js"></script>-->
<script src="https://cdn.jsdelivr.net/npm/cropperjs/dist/cropper.min.js"></script>

<script>
    
    let cropper;

function viewImage(event, index) {
    const input = event.target;
    const img = document.getElementById(`imgView${index}`);
    const cropperContainer = document.getElementById(`cropperContainer${index}`);

    if (input.files && input.files[0]) {
        const reader = new FileReader();
        reader.onload = function (e) {
            img.src = e.target.result;
            img.style.display = "block";
            
            // Show Cropper container
            cropperContainer.style.display = "block";

            // Destroy existing cropper instance
            if (cropper) {
                cropper.destroy();
            }

            // Initialize Cropper
            cropper = new Cropper(img, {
                aspectRatio: 1, // Adjust as needed
                viewMode: 1,
                autoCropArea: 1,
            });
        };
        reader.readAsDataURL(input.files[0]);
    }
}

function saveCroppedImage(index) {
    if (!cropper) return;

    const croppedCanvas = cropper.getCroppedCanvas();
    if (croppedCanvas) {
        document.getElementById(`imgView${index}`).src = croppedCanvas.toDataURL();
        cropper.destroy();
        cropper = null; 
    }
}
    // function validateAndSubmit(event){
    //     event.preventDefault();
    //     if(validateForm()){
    //         //document.form[0].submit();   
    //     }
    // }

    document.getElementById("productForm").addEventListener("submit",async function(event){
        event.preventDefault();

        if (!validateForm()){
            console.log('validation error');
            //return
        }

        const productData = new FormData(this);

        console.log([...productData]);

        try {
            const response = await axios.post('/admin/addProducts', productData, {
                headers: {'Content-Type':'multipart/form-data'}
            });

            if(response.data.success){
                swal.fire({
                    icon: 'success',
                    title: 'Product Added',
                    text: response.data.message,
                    showConfirmButton: false,
                    timer: 1500
                }).then(()=> {
                    window.location.href = '/admin/products';
                });
            }
            else{
                swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text:response.data.error
                })
            }
        } catch (error) {
            swal.fire({
                icon: 'error',
                title: 'Error',
                text: 'failed to add the product',
                confirmButtonText: 'OK'
            })
        }
    })

    function validateForm() {
        clearErrorMessage();

        const name = document.getElementsByName('productName')[0]?.value || '';
        const description = document.getElementById('descriptionid')[0]?.value || '';
        const price = document.getElementsByName('regularPrice')[0]?.value || '';
        const category = document.getElementsByName('category')[0]?.value || '';
        //const quantity = document.getElementsByName('quantity')[0]?.value || '';
        let isValid = true;

        if(name.trim() === "") {
            displayErrorMessage('productName-error','Product name is required');
            isValid = false;
        }
        if(description.trim() === "") {
            displayErrorMessage('description-error', 'Please enter a description');
            isValid = false;
        }

        const priceValue = parseFloat(price);
        if(!price || isNaN(priceValue) || priceValue <= 0){
            displayErrorMessage('regularPrice-error','enter valid price');
            isValid = false;
        }

        const salePriceVal = parseFloat(price);
        if(!price || isNaN(salePriceVal) || salePriceVal <= 0){
            displayErrorMessage('salePrice-error','enter valid price');
            isValid = false;
        }

        if(category.trim() === ""){
            displayErrorMessage('category-error', 'Please select a category');
            isValid = false;
        }

        // const quantityValue = parseInt(quantity, 10);
        // if (quantity.trim() === "" || isNaN(quantityValue) || quantityValue <= 0) {
        //         displayErrorMessage('quantity-error', 'Please enter a valid quantity');
        //         isValid = false;
        //     }

        return isValid;    
    }

    function clearErrorMessage() {
        const errorMessages = document.getElementsByClassName('error-message');
        for(let errorMessage of errorMessages){
            errorMessage.innerHTML = "";
        }
    }

    function displayErrorMessage(id, message){
        document.getElementById(id).innerHTML = message;
    }
</script>